:root {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*, ::before, ::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

body {
  font-size: 100%;
  font-family: 'Open Sans', sans-serif;
  color: #202020;
}

section {
  padding: 6em 2em;
}

.section-pre-heading {
  color: #b0b0b0;
  text-transform: uppercase;
  text-align: center;
  font-size: 1.1em;
}

.section-heading {
  font-family: 'Quicksand', sans-serif;
  text-transform: uppercase;
  font-size: 3em;
  font-weight: 700;
  color: #505050;
  margin-bottom: .1em;
  text-align: center;
}

.section-key {
  background-image: url(../img/heading-img.svg);
  width: 142px;
  height: 13px;
  opacity: .5;
  margin: 0 auto 5em auto;
}

.header {
  background-image: url("../img/plain-bg.jpg");
  padding: 1em 2em;
  overflow: hidden;
  /*why doesnt this stretch to its container*/
  /*why doesnt the header__list stretch to its container*/
  /*why does adding spans increase the width so much?*/
  /*scale images so the grid does not expand horizonally and make the grid-left smaller*/
}

.header__grid {
  height: calc(100vh - 2em);
  max-width: 1280px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: auto 1fr;
}

.header__nav {
  grid-column: 1 / -1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 0 0 1em 0;
}

.header__logo-img {
  width: 170px;
  height: auto;
}

.header__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  position: relative;
}

.header__list::after {
  content: "";
  position: absolute;
  top: calc(100% + 2em);
  height: 3px;
  width: 100%;
  background-image: -webkit-gradient(linear, left top, right top, from(transparent), color-stop(rgba(176, 176, 176, 0.5)), to(transparent));
  background-image: linear-gradient(to right, transparent, rgba(176, 176, 176, 0.5), transparent);
}

.header__item:not(:last-of-type) {
  margin-right: 4em;
}

.header__link {
  font-family: 'Quicksand', sans-serif;
  color: inherit;
  text-transform: uppercase;
  font-weight: 500;
  position: relative;
  -webkit-transition: all 350ms ease-out;
  transition: all 350ms ease-out;
}

.header__link:hover {
  color: #202020;
}

.header__link::before {
  content: "";
  position: absolute;
  height: 2px;
  left: 50%;
  right: 50%;
  top: -.75em;
  background-color: #F864A6;
  -webkit-transition: all 350ms ease-out;
  transition: all 350ms ease-out;
}

.header__link:hover::before {
  left: 0;
  right: 0;
}

.header__button {
  color: #fff;
  text-transform: uppercase;
  background-color: gray;
  padding: .75em 1.75em;
  border-radius: 3px;
  -webkit-transition: background-color 300ms ease-in;
  transition: background-color 300ms ease-in;
}

.header__button:hover {
  background-color: #202020;
}

.header__hero {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 1fr 1fr;
}

.header__hero-left {
  grid-column: 1 / 2;
  -ms-flex-item-align: center;
      align-self: center;
}

.header__hero-heading {
  font-family: 'Quicksand', sans-serif;
  font-size: 7.5em;
  line-height: 1;
  color: #F864A6;
  letter-spacing: -10px;
}

.header__hero-heading span {
  opacity: 0;
  display: inline-block;
}

.header__hero-heading.loaded span {
  -webkit-animation: fade_and_xform 1s both;
          animation: fade_and_xform 1s both;
}

.header__hero-heading.loaded span:first-of-type {
  -webkit-animation-delay: 400ms;
          animation-delay: 400ms;
}

.header__hero-heading.loaded span:nth-of-type(2) {
  -webkit-animation-delay: 900ms;
          animation-delay: 900ms;
}

.header__hero-heading.loaded span:nth-of-type(3) {
  -webkit-animation-delay: 500ms;
          animation-delay: 500ms;
}

.header__hero-heading.loaded span:nth-of-type(5) {
  -webkit-animation-delay: 500ms;
          animation-delay: 500ms;
}

.header__hero-heading.loaded span:nth-of-type(6) {
  -webkit-animation-delay: 700ms;
          animation-delay: 700ms;
}

.header__hero-heading.loaded span:last-of-type {
  -webkit-animation-delay: 1200ms;
          animation-delay: 1200ms;
}

.header__hero-heading-secondary {
  font-family: 'Quicksand', sans-serif;
  font-size: 2.1em;
  color: gray;
  text-transform: lowercase;
  font-weight: 300;
  margin-bottom: 2em;
  opacity: 0;
  -webkit-transform: translateY(150%);
          transform: translateY(150%);
  -webkit-transition: all 400ms ease-in;
  transition: all 400ms ease-in;
}

.header__hero-heading-secondary.fade-in {
  opacity: 1;
  -webkit-transform: translateY(0);
          transform: translateY(0);
}

.header__hero-list {
  margin-bottom: 2.5em;
  opacity: 0;
  -webkit-transform: translateY(150%);
          transform: translateY(150%);
  -webkit-transition: all 500ms;
  transition: all 500ms;
}

.header__hero-list.fade-in {
  opacity: 1;
  -webkit-transform: translateY(0);
          transform: translateY(0);
  -webkit-transition-delay: 400ms;
          transition-delay: 400ms;
}

.header__hero-item {
  font-style: italic;
  position: relative;
  padding-left: 2em;
}

.header__hero-item::before {
  position: absolute;
  content: '\f058';
  position: absolute;
  left: 0;
  font-family: 'FontAwesome';
  font-size: 1.5em;
  color: #b0b0b0;
}

.header__hero-item:not(:last-of-type) {
  margin-bottom: .75em;
}

.header__hero-btn-wrap {
  opacity: 0;
  -webkit-transform: translateY(150%);
          transform: translateY(150%);
  -webkit-transition: all 500ms;
  transition: all 500ms;
}

.header__hero-btn-wrap.fade-in {
  opacity: 1;
  -webkit-transform: translateY(0);
          transform: translateY(0);
  -webkit-transition-delay: 800ms;
          transition-delay: 800ms;
}

.header__hero-btn {
  color: #fff;
  text-transform: uppercase;
  display: inline-block;
  padding: .5em 1.75em;
  border-radius: 999em;
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

.header__hero-btn:first-of-type {
  background-color: #F864A6;
  margin-right: 1em;
  border: 1px solid transparent;
}

.header__hero-btn:last-of-type {
  background-color: gray;
  border: 1px solid gray;
}

.header__hero-btn:first-of-type:hover {
  background-color: gray;
}

.header__hero-btn:last-of-type:hover {
  background-color: #F864A6;
  border-color: #F864A6;
}

.header__hero-right {
  grid-column: 2 / 3;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
}

.header__hero-img {
  width: 200px;
  height: auto;
  -webkit-transform: scale(1.6);
          transform: scale(1.6);
  -webkit-transition: -webkit-transform 2s;
  transition: -webkit-transform 2s;
  transition: transform 2s;
  transition: transform 2s, -webkit-transform 2s;
}

.header__hero-img:first-of-type {
  grid-column: 1 / 2;
  grid-row: 1 / 2;
  -ms-flex-item-align: end;
      align-self: end;
  justify-self: end;
  -webkit-transform: translate(300%, 600%) scale(1.6);
          transform: translate(300%, 600%) scale(1.6);
}

.header__hero-img:nth-of-type(2) {
  grid-column: 3 / 4;
  grid-row: 1 / 2;
  -ms-flex-item-align: end;
      align-self: end;
  justify-self: start;
  -webkit-transform: translate(400%, -50%) scale(1.6);
          transform: translate(400%, -50%) scale(1.6);
}

.header__hero-img:nth-of-type(3) {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
  -webkit-transform: translate(-60%, 450%) scale(1.6);
          transform: translate(-60%, 450%) scale(1.6);
}

.header__hero-img:nth-of-type(4) {
  grid-column: 1 / 2;
  grid-row: 2 / 4;
  -ms-flex-item-align: center;
      align-self: center;
  justify-self: end;
  -webkit-transform: translate(200%, 350%) scale(1.6);
          transform: translate(200%, 350%) scale(1.6);
}

.header__hero-img:last-of-type {
  grid-column: 3 / 4;
  grid-row: 2 / 4;
  -ms-flex-item-align: center;
      align-self: center;
  justify-self: start;
  -webkit-transform: translate(-200%, 350%) scale(1.6);
          transform: translate(-200%, 350%) scale(1.6);
}

.header__hero-img.transform-in:first-of-type {
  -webkit-transform: translate(0) scale(1.6);
          transform: translate(0) scale(1.6);
}

.header__hero-img.transform-in:nth-of-type(2) {
  -webkit-transition-delay: 400ms;
          transition-delay: 400ms;
  -webkit-transform: translate(0) scale(1.6);
          transform: translate(0) scale(1.6);
}

.header__hero-img.transform-in:nth-of-type(3) {
  -webkit-transition-delay: 600ms;
          transition-delay: 600ms;
  -webkit-transform: translate(0) scale(1.6);
          transform: translate(0) scale(1.6);
}

.header__hero-img.transform-in:nth-of-type(4) {
  -webkit-transition-delay: 800ms;
          transition-delay: 800ms;
  -webkit-transform: translate(0) scale(1.6);
          transform: translate(0) scale(1.6);
}

.header__hero-img.transform-in:last-of-type {
  -webkit-transition-delay: 300ms;
          transition-delay: 300ms;
  -webkit-transform: translate(0) scale(1.6);
          transform: translate(0) scale(1.6);
}

@-webkit-keyframes fade_and_xform {
  0% {
    -webkit-transform: translateY(100%);
            transform: translateY(100%);
    opacity: 0;
  }
  50% {
    opacity: .2;
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

@keyframes fade_and_xform {
  0% {
    -webkit-transform: translateY(100%);
            transform: translateY(100%);
    opacity: 0;
  }
  50% {
    opacity: .2;
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

.services {
  background-color: #f0e7e7;
}

.services__grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  grid-gap: 2em;
  max-width: 1280px;
  margin: 0 auto;
}

.services__main {
  width: 400px;
  border-radius: 50%/100px 100px 0 0;
  overflow: hidden;
  position: relative;
  -webkit-box-shadow: 0 2px 5px rgba(176, 176, 176, 0.3);
          box-shadow: 0 2px 5px rgba(176, 176, 176, 0.3);
}

.services__main::before {
  color: #fff;
  content: "\f061";
  position: absolute;
  font-family: "FontAwesome";
  border-radius: 50%;
  background-color: #F864A6;
  font-size: 1em;
  padding: 1.2em;
  bottom: .5em;
  left: 50%;
  -webkit-transform: translateX(-50%) rotate(-360deg);
          transform: translateX(-50%) rotate(-360deg);
  opacity: 0;
  -webkit-transition: all 450ms ease-out;
  transition: all 450ms ease-out;
}

.services__main::after {
  color: #fff;
  content: "\f218";
  position: absolute;
  font-family: "FontAwesome";
  border-radius: 50%;
  background-color: #F864A6;
  font-size: 1em;
  bottom: .85em;
  padding: .8em;
  left: 42%;
  -webkit-transform: translateX(-50%) rotate(-360deg);
          transform: translateX(-50%) rotate(-360deg);
  opacity: 0;
  -webkit-transition: all 450ms ease-out;
  transition: all 450ms ease-out;
}

.services__main:hover::before {
  opacity: 1;
  -webkit-transform: translateX(-50%) rotate(0);
          transform: translateX(-50%) rotate(0);
  left: 90%;
}

.services__main:hover::after {
  opacity: 1;
  -webkit-transform: translateX(-50%) rotate(0);
          transform: translateX(-50%) rotate(0);
  left: 82%;
}

.services__image {
  display: block;
}

.services__description {
  padding: 2em;
  background-color: #fff;
}

.services__description::after {
  position: absolute;
  content: "";
  top: 0;
  right: 0;
  bottom: 30%;
  left: 0;
  background-image: -webkit-gradient(linear, left bottom, left top, from(rgba(255, 255, 255, 0.8)), to(transparent));
  background-image: linear-gradient(to top, rgba(255, 255, 255, 0.8), transparent);
  opacity: 0;
  -webkit-transition: all ease-in 400ms;
  transition: all ease-in 400ms;
}

.services__description:hover::after {
  top: -10%;
  right: 0;
  bottom: 30%;
  left: 0;
  opacity: 1;
}

.services__description-heading {
  margin: 1.5em 0 .5em 0;
  text-align: center;
  font-family: 'Quicksand', sans-serif;
  color: #202020;
  -webkit-transition: -webkit-transform 300ms ease-out;
  transition: -webkit-transform 300ms ease-out;
  transition: transform 300ms ease-out;
  transition: transform 300ms ease-out, -webkit-transform 300ms ease-out;
}

.services__description:hover .services__description-heading {
  -webkit-transform: translateY(-2em);
          transform: translateY(-2em);
}

.services__description-information {
  color: gray;
  text-align: center;
  -webkit-transition: -webkit-transform 300ms ease-out;
  transition: -webkit-transform 300ms ease-out;
  transition: transform 300ms ease-out;
  transition: transform 300ms ease-out, -webkit-transform 300ms ease-out;
}

.services__description:hover .services__description-information {
  -webkit-transform: translateY(-2em);
          transform: translateY(-2em);
}

.video {
  background-image: url("../img/img-video-bg.jpg");
  background-size: cover;
  background-attachment: fixed;
  padding: 10em 2em;
  margin-top: 5em;
}

.video__wrap {
  color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.video__heading {
  font-size: 2.7em;
  text-transform: uppercase;
  font-family: 'Quicksand', sans-serif;
  margin-right: .5em;
}

.video__icon {
  font-size: 50px !important;
  display: inline-block;
  font-family: "FontAwesome";
  cursor: pointer;
  position: relative;
  -webkit-transition: -webkit-transform 250ms ease-out;
  transition: -webkit-transform 250ms ease-out;
  transition: transform 250ms ease-out;
  transition: transform 250ms ease-out, -webkit-transform 250ms ease-out;
}

.video__icon:hover {
  -webkit-transform: scale(1.1);
          transform: scale(1.1);
  -webkit-box-shadow: 1px 2px 2px rgba(80, 80, 80, 0.8);
          box-shadow: 1px 2px 2px rgba(80, 80, 80, 0.8);
}

.discuss {
  padding: 0;
  display: grid;
  grid-template-columns: 1fr 1fr;
  max-width: 1280px;
  margin: 0 auto;
}

.discuss__img {
  background-image: url("../img/discuss.jpg");
  background-size: cover;
}

.discuss__text {
  padding: 3em 2em;
}

.discuss__pre-heading {
  font-size: 1em;
  text-transform: none;
  text-align: left;
  color: #505050;
}

.discuss__heading {
  font-size: 1.8em;
  text-transform: none;
  text-align: left;
}

.discuss__key {
  margin: .5em 0 3em 0;
}

.discuss__para {
  line-height: 1.6;
  color: gray;
}

.discuss__para:not(:last-of-type) {
  margin-bottom: 1.6em;
}

.discuss__link {
  display: inline-block;
  border-radius: 3px;
  color: #fff;
  margin-top: 2em;
  padding: .75em 1em;
  background-color: #F864A6;
  -webkit-transform: background-color 300ms ease-out;
          transform: background-color 300ms ease-out;
}

.discuss__link::after {
  content: "\f054";
  font-family: FontAwesome;
  margin-left: 1em;
}

.discuss__link:hover {
  background-color: #f6338a;
}

.stats {
  background-color: #f0e7e7;
  padding-top: 2em;
  padding-bottom: 2em;
}

.stats__grid {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-gap: 2em;
  max-width: 1280px;
  margin: 0 auto;
}

.stats__wrap {
  grid-column: 1 / 3;
  padding: 1em;
  -ms-flex-item-align: center;
      align-self: center;
}

.stats__heading {
  font-family: 'Quicksand', sans-serif;
  margin-bottom: 1.5em;
  color: #202020;
}

.stats__summary {
  color: gray;
}

.stats__stat {
  background-color: #fff;
  padding: 1.5em 2.5em;
  text-align: center;
  border-radius: 3px;
}

.stats__number {
  font-size: 2.5em;
  font-weight: bold;
}

.stats__service {
  color: gray;
}

.blog {
  /*&__main:hover {
        transform: translateY(-.4em);
    }
    */
}

.blog__grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  grid-gap: 2em;
  max-width: 1280px;
  margin: 0 auto;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.blog__main {
  width: 400px;
  position: relative;
  border-radius: 3px;
  -webkit-box-shadow: 0 0 2px 2px rgba(128, 128, 128, 0.3);
          box-shadow: 0 0 2px 2px rgba(128, 128, 128, 0.3);
  -webkit-transition: -webkit-transform 300ms ease-in;
  transition: -webkit-transform 300ms ease-in;
  transition: transform 300ms ease-in;
  transition: transform 300ms ease-in, -webkit-transform 300ms ease-in;
}

.blog__image-wrap {
  position: relative;
}

.blog__image-wrap::after {
  position: absolute;
  content: "";
  background-image: url("../img/blog-entry-overlay.svg");
  left: 0;
  right: 0;
  bottom: 0;
  height: 52px;
  /*will not fit perfectly when width changes - update this soon*/
  background-repeat: no-repeat;
  background-size: 100%;
}

.blog__image {
  display: block;
}

.blog__description {
  padding: 2em;
  background-color: #fff;
}

.blog__description-heading {
  font-size: 1.2em;
  margin: 1em 0 .5em 0;
  text-transform: capitalize;
  font-family: 'Quicksand', sans-serif;
  color: #202020;
  -webkit-transition: -webkit-transform 300ms ease-out;
  transition: -webkit-transform 300ms ease-out;
  transition: transform 300ms ease-out;
  transition: transform 300ms ease-out, -webkit-transform 300ms ease-out;
}

.blog__description-information {
  color: gray;
  margin-bottom: 1em;
  text-align: center;
}

.blog__summary {
  color: gray;
  margin-bottom: 2em;
  -webkit-hyphens: auto;
      -ms-hyphens: auto;
          hyphens: auto;
}

.blog__link {
  color: #202020;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  position: relative;
  padding-bottom: .3em;
}

.blog__link:hover {
  color: #505050;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

.blog__link::after {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  content: "";
  height: 1px;
  -webkit-transform: scaleX(0);
          transform: scaleX(0);
  -webkit-transform-origin: left center;
          transform-origin: left center;
  z-index: 88;
  background-color: currentColor;
  -webkit-transition: -webkit-transform 350ms ease-out;
  transition: -webkit-transform 350ms ease-out;
  transition: transform 350ms ease-out;
  transition: transform 350ms ease-out, -webkit-transform 350ms ease-out;
}

.blog__link:hover::after {
  -webkit-transform: scaleX(1);
          transform: scaleX(1);
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
