:root {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*,
::before,
::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

body {
  font-size: 100%;
  font-family: 'Open Sans', sans-serif;
  color: #505050;
}

.header {
  background-image: url("../img/plain-bg.jpg");
  padding: 1em 2em;
  overflow: hidden;
  /*why doesnt this stretch to its container*/
  /*why doesnt the header__list stretch to its container*/
  /*why does adding spans increase the width so much?*/
  /*scale images so the grid does not expand horizonally and make the grid-left smaller*/
}

.header__grid {
  height: calc(100vh - 2em);
  max-width: 1280px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: auto 1fr;
}

.header__nav {
  grid-column: 1 / -1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 0 0 1em 0;
}

.header__logo-img {
  width: 170px;
  height: auto;
}

.header__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  position: relative;
}

.header__list::after {
  content: "";
  position: absolute;
  top: calc(100% + 2em);
  height: 3px;
  width: 100%;
  background-image: -webkit-gradient(linear, left top, right top, from(transparent), color-stop(rgba(176, 176, 176, 0.5)), to(transparent));
  background-image: linear-gradient(to right, transparent, rgba(176, 176, 176, 0.5), transparent);
}

.header__item:not(:last-of-type) {
  margin-right: 4em;
}

.header__link {
  font-family: 'Quicksand', sans-serif;
  color: inherit;
  text-transform: uppercase;
  font-weight: 500;
  position: relative;
  -webkit-transition: all 350ms ease-out;
  transition: all 350ms ease-out;
}

.header__link:hover {
  color: #202020;
}

.header__link::before {
  content: "";
  position: absolute;
  height: 2px;
  left: 50%;
  right: 50%;
  top: -.75em;
  background-color: #F864A6;
  -webkit-transition: all 350ms ease-out;
  transition: all 350ms ease-out;
}

.header__link:hover::before {
  left: 0;
  right: 0;
}

.header__button {
  color: #fff;
  text-transform: uppercase;
  background-color: gray;
  padding: .75em 1.75em;
  border-radius: 3px;
  -webkit-transition: background-color 300ms ease-in;
  transition: background-color 300ms ease-in;
}

.header__button:hover {
  background-color: #202020;
}

.header__hero {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: 1fr 1fr;
}

.header__hero-left {
  grid-column: 1 / 2;
  -ms-flex-item-align: center;
      align-self: center;
}

.header__hero-heading {
  font-family: 'Quicksand', sans-serif;
  font-size: 7.5em;
  line-height: 1;
  color: #F864A6;
  letter-spacing: -10px;
}

.header__hero-heading span {
  opacity: 0;
  display: inline-block;
}

.header__hero-heading.loaded span {
  -webkit-animation: fade_and_xform 1s both;
          animation: fade_and_xform 1s both;
}

.header__hero-heading.loaded span:first-of-type {
  -webkit-animation-delay: 400ms;
          animation-delay: 400ms;
}

.header__hero-heading.loaded span:nth-of-type(2) {
  -webkit-animation-delay: 900ms;
          animation-delay: 900ms;
}

.header__hero-heading.loaded span:nth-of-type(3) {
  -webkit-animation-delay: 500ms;
          animation-delay: 500ms;
}

.header__hero-heading.loaded span:nth-of-type(5) {
  -webkit-animation-delay: 500ms;
          animation-delay: 500ms;
}

.header__hero-heading.loaded span:nth-of-type(6) {
  -webkit-animation-delay: 700ms;
          animation-delay: 700ms;
}

.header__hero-heading.loaded span:last-of-type {
  -webkit-animation-delay: 1200ms;
          animation-delay: 1200ms;
}

.header__hero-heading-secondary {
  font-family: 'Quicksand', sans-serif;
  font-size: 2.1em;
  color: gray;
  text-transform: lowercase;
  font-weight: 300;
  margin-bottom: 2em;
  opacity: 0;
  -webkit-transform: translateY(150%);
          transform: translateY(150%);
  -webkit-transition: all 400ms ease-in;
  transition: all 400ms ease-in;
}

.header__hero-heading-secondary.fade-in {
  opacity: 1;
  -webkit-transform: translateY(0);
          transform: translateY(0);
}

.header__hero-list {
  margin-bottom: 2.5em;
  opacity: 0;
  -webkit-transform: translateY(150%);
          transform: translateY(150%);
  -webkit-transition: all 500ms;
  transition: all 500ms;
}

.header__hero-list.fade-in {
  opacity: 1;
  -webkit-transform: translateY(0);
          transform: translateY(0);
  -webkit-transition-delay: 400ms;
          transition-delay: 400ms;
}

.header__hero-item {
  font-style: italic;
  position: relative;
  padding-left: 2em;
}

.header__hero-item::before {
  position: absolute;
  content: '\f058';
  position: absolute;
  left: 0;
  font-family: 'FontAwesome';
  font-size: 1.5em;
  color: #b0b0b0;
}

.header__hero-item:not(:last-of-type) {
  margin-bottom: .75em;
}

.header__hero-btn-wrap {
  opacity: 0;
  -webkit-transform: translateY(150%);
          transform: translateY(150%);
  -webkit-transition: all 500ms;
  transition: all 500ms;
}

.header__hero-btn-wrap.fade-in {
  opacity: 1;
  -webkit-transform: translateY(0);
          transform: translateY(0);
  -webkit-transition-delay: 800ms;
          transition-delay: 800ms;
}

.header__hero-btn {
  color: #fff;
  text-transform: uppercase;
  display: inline-block;
  padding: .5em 1.75em;
  border-radius: 999em;
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

.header__hero-btn:first-of-type {
  background-color: #F864A6;
  margin-right: 1em;
  border: 1px solid transparent;
}

.header__hero-btn:last-of-type {
  background-color: gray;
  border: 1px solid gray;
}

.header__hero-btn:first-of-type:hover {
  background-color: gray;
}

.header__hero-btn:last-of-type:hover {
  background-color: #F864A6;
  border-color: #F864A6;
}

.header__hero-right {
  grid-column: 2 / 3;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
}

.header__hero-img {
  width: 200px;
  height: auto;
  -webkit-transform: scale(1.6);
          transform: scale(1.6);
  -webkit-transition: -webkit-transform 2s;
  transition: -webkit-transform 2s;
  transition: transform 2s;
  transition: transform 2s, -webkit-transform 2s;
}

.header__hero-img:first-of-type {
  grid-column: 1 / 2;
  grid-row: 1 / 2;
  -ms-flex-item-align: end;
      align-self: end;
  justify-self: end;
  -webkit-transform: translate(300%, 600%) scale(1.6);
          transform: translate(300%, 600%) scale(1.6);
}

.header__hero-img:nth-of-type(2) {
  grid-column: 3 / 4;
  grid-row: 1 / 2;
  -ms-flex-item-align: end;
      align-self: end;
  justify-self: start;
  -webkit-transform: translate(400%, -50%) scale(1.6);
          transform: translate(400%, -50%) scale(1.6);
}

.header__hero-img:nth-of-type(3) {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
  -webkit-transform: translate(-60%, 450%) scale(1.6);
          transform: translate(-60%, 450%) scale(1.6);
}

.header__hero-img:nth-of-type(4) {
  grid-column: 1 / 2;
  grid-row: 2 / 4;
  -ms-flex-item-align: center;
      align-self: center;
  justify-self: end;
  -webkit-transform: translate(200%, 350%) scale(1.6);
          transform: translate(200%, 350%) scale(1.6);
}

.header__hero-img:last-of-type {
  grid-column: 3 / 4;
  grid-row: 2 / 4;
  -ms-flex-item-align: center;
      align-self: center;
  justify-self: start;
  -webkit-transform: translate(-200%, 350%) scale(1.6);
          transform: translate(-200%, 350%) scale(1.6);
}

.header__hero-img.transform-in:first-of-type {
  -webkit-transform: translate(0) scale(1.6);
          transform: translate(0) scale(1.6);
}

.header__hero-img.transform-in:nth-of-type(2) {
  -webkit-transition-delay: 400ms;
          transition-delay: 400ms;
  -webkit-transform: translate(0) scale(1.6);
          transform: translate(0) scale(1.6);
}

.header__hero-img.transform-in:nth-of-type(3) {
  -webkit-transition-delay: 600ms;
          transition-delay: 600ms;
  -webkit-transform: translate(0) scale(1.6);
          transform: translate(0) scale(1.6);
}

.header__hero-img.transform-in:nth-of-type(4) {
  -webkit-transition-delay: 800ms;
          transition-delay: 800ms;
  -webkit-transform: translate(0) scale(1.6);
          transform: translate(0) scale(1.6);
}

.header__hero-img.transform-in:last-of-type {
  -webkit-transition-delay: 300ms;
          transition-delay: 300ms;
  -webkit-transform: translate(0) scale(1.6);
          transform: translate(0) scale(1.6);
}

@-webkit-keyframes fade_and_xform {
  0% {
    -webkit-transform: translateY(100%);
            transform: translateY(100%);
    opacity: 0;
  }
  50% {
    opacity: .2;
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

@keyframes fade_and_xform {
  0% {
    -webkit-transform: translateY(100%);
            transform: translateY(100%);
    opacity: 0;
  }
  50% {
    opacity: .2;
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
